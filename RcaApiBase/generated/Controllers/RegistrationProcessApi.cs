/*
 * Reports, certificates and applications API
 *
 * This is API for part of the customer portal, Reports, certificates and applications
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using Quipu.RcaApiBase.OpenApi.Attributes;
using Microsoft.AspNetCore.Authorization;
using Quipu.RcaApiBase.OpenApi.Models;

namespace Quipu.RcaApiBase.OpenApi.Controllers
{
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class RegistrationProcessApiController : ControllerBase
    {
        /// <summary>
        /// Gets fields definition for given item code catalogue
        /// </summary>
        /// <param name="itemCode"></param>
        /// <response code="200">OK</response>
        /// <response code="500">Server Error</response>
        [HttpGet]
        [Route("/Quipu-GmbH/RCAApi/1.0.0/FieldsDefinition/{itemCode}")]
        [ValidateModelState]
        [SwaggerOperation("FieldsDefinitionItemCodeGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(FieldsDefinition), description: "OK")]
        public virtual IActionResult FieldsDefinitionItemCodeGet([FromRoute][Required] string itemCode)
        {
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(FieldsDefinition));

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500);
            string exampleJson = null;
            exampleJson = "{\n  \"mandatoryFields\" : [ {\n    \"fieldName\" : \"fieldName\",\n    \"validators\" : [ {\n      \"validatorType\" : \"Warning\",\n      \"validatorEngine\" : \"Python\",\n      \"validatorText\" : \"validatorText\",\n      \"description\" : \"description\",\n      \"message\" : \"message\"\n    }, {\n      \"validatorType\" : \"Warning\",\n      \"validatorEngine\" : \"Python\",\n      \"validatorText\" : \"validatorText\",\n      \"description\" : \"description\",\n      \"message\" : \"message\"\n    } ],\n    \"dataType\" : \"int\",\n    \"fieldLabel\" : \"fieldLabel\",\n    \"description\" : \"description\",\n    \"fieldGroup\" : \"fieldGroup\",\n    \"fieldOrder\" : \"0\",\n    \"refValuesCode\" : \"refValuesCode\",\n    \"tags\" : [ {\n      \"code\" : \"code\",\n      \"parentCode\" : \"parentCode\"\n    }, {\n      \"code\" : \"code\",\n      \"parentCode\" : \"parentCode\"\n    } ]\n  }, {\n    \"fieldName\" : \"fieldName\",\n    \"validators\" : [ {\n      \"validatorType\" : \"Warning\",\n      \"validatorEngine\" : \"Python\",\n      \"validatorText\" : \"validatorText\",\n      \"description\" : \"description\",\n      \"message\" : \"message\"\n    }, {\n      \"validatorType\" : \"Warning\",\n      \"validatorEngine\" : \"Python\",\n      \"validatorText\" : \"validatorText\",\n      \"description\" : \"description\",\n      \"message\" : \"message\"\n    } ],\n    \"dataType\" : \"int\",\n    \"fieldLabel\" : \"fieldLabel\",\n    \"description\" : \"description\",\n    \"fieldGroup\" : \"fieldGroup\",\n    \"fieldOrder\" : \"0\",\n    \"refValuesCode\" : \"refValuesCode\",\n    \"tags\" : [ {\n      \"code\" : \"code\",\n      \"parentCode\" : \"parentCode\"\n    }, {\n      \"code\" : \"code\",\n      \"parentCode\" : \"parentCode\"\n    } ]\n  } ],\n  \"optionalFields\" : [ null, null ]\n}";

            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<FieldsDefinition>(exampleJson)
            : default(FieldsDefinition);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets registration process attached to certain catalogue item
        /// </summary>
        /// <param name="itemCode"></param>
        /// <response code="200">Registration process</response>
        /// <response code="500">Server Error</response>
        [HttpGet]
        [Route("/Quipu-GmbH/RCAApi/1.0.0/RegistrationProcess/{itemCode}")]
        [ValidateModelState]
        [SwaggerOperation("RegistrationProcessItemCodeGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(RegistrationProcess), description: "Registration process")]
        public virtual IActionResult RegistrationProcessItemCodeGet([FromRoute][Required] string itemCode)
        {
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(RegistrationProcess));

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500);
            string exampleJson = null;
            exampleJson = "{\n  \"code\" : \"code\",\n  \"steps\" : [ {\n    \"name\" : \"name\",\n    \"fieldGroup\" : \"fieldGroup\",\n    \"order\" : \"order\"\n  }, {\n    \"name\" : \"name\",\n    \"fieldGroup\" : \"fieldGroup\",\n    \"order\" : \"order\"\n  } ]\n}";

            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<RegistrationProcess>(exampleJson)
            : default(RegistrationProcess);            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
